load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

config_setting(
    name = "platform_windows",
    constraint_values = [
        "@platforms//os:windows",
    ],
)

TZ_COPTS = select({
    ":platform_windows": [],
    "//conditions:default": [
        "-std=c11",
    ],
})

TZ_DEFINES = select({
    ":platform_windows": [
        "HAVE_POSIX_DECLS=0",
        "HAVE_SYS_STAT_H=1",
        "HAVE_SYS_WAIT_H=0",
        "HAVE_UNISTD_H=0",
        "HAVE_LOCALTIME_R=0",
        "HAVE_LINK=0",
        "HAVE_SYMLINK=0",
    ],
    "//conditions:default": [],
})

cc_binary(
    name = "zic",
    srcs = [
        "zic.c",
    ],
    copts = TZ_COPTS,
    defines = TZ_DEFINES,
    visibility = ["//visibility:public"],
    deps = [
        ":getopt",
        ":headers",
    ],
)

cc_binary(
    name = "zdump",
    srcs = select({
        ":platform_windows": [
            "zdump.c",
        ],
        "//conditions:default": [
            "asctime.c",
            "localtime.c",
            "strftime.c",
            "zdump.c",
        ],
    }),
    copts = TZ_COPTS,
    defines = TZ_DEFINES,
    visibility = ["//visibility:public"],
    deps = [
        ":getopt",
        ":headers",
    ],
)

cc_binary(
    name = "date",
    srcs = [
        "date.c",
    ],
    copts = TZ_COPTS,
    defines = TZ_DEFINES,
    visibility = ["//visibility:public"],
    deps = [
        ":getopt",
        ":headers",
    ],
)

cc_library(
    name = "getopt",
    srcs = [
        "getopt.c",
    ],
)

cc_library(
    name = "headers",
    hdrs = [
        "private.h",
        "tzfile.h",
        "version.h",
    ],
    copts = TZ_COPTS,
    data = [
        ":version_header",
    ],
    defines = TZ_DEFINES,
)

genrule(
    name = "version_header",
    srcs = [
        ".gitignore",
    ],
    outs = [
        "version.h",
    ],
    # Currently this just uses the timestamp for the version.
    # We'll switch to using git timestamps later if possible.
    cmd = """set -e
V=`date +"%Y%m%d-bazel"`
cat <<EOF > $@
static char const PKGVERSION[]="(tzcode) ";
static char const TZVERSION[]="$${V}";
static char const REPORT_BUGS_TO[]="tz@iana.org";
EOF""",
    stamp = True,
)
